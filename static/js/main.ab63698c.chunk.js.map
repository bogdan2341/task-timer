{"version":3,"sources":["store/actionTypes.js","components/InputNewTask.js","store/actions.js","utils/timeUtils.js","components/TaskTimer.js","components/TaskItem.js","components/TaskList.js","layouts/MainLayout.js","store/reducer.js","store/index.js","theme.js","App.js","index.js"],"names":["ADD_TASK_TIMER","DELETE_TASK_TIMER","SET_TIMERS","PAUSE_TIMER","RESUME_TIMER","useStyles","makeStyles","theme","root","marginTop","spacing","padding","display","justifyContent","textField","flexGrow","marginRight","InputNewTask","useState","title","setTitle","dispatch","useDispatch","classes","saveTimerHandler","taskTitle","moment","format","id","startingTime","type","payload","pausingTime","isPaused","addTimer","Math","random","toString","substr","Date","now","className","TextField","variant","onChange","e","target","value","label","onKeyPress","event","key","Button","onClick","color","msToTime","ms","h","duration","hours","m","minutes","s","seconds","TaskTimer","props","time","setTime","useEffect","timer","clearInterval","setInterval","margin","alignItems","transition","paused","palette","action","disabled","backgroundColor","disabledBackground","TaskItem","onPauseHandler","timerId","pauseTimer","Paper","clsx","IconButton","onRemove","text","textAlign","TaskList","timers","useSelector","store","length","map","el","Typography","maxWidth","logo","primary","main","fontWeight","MainLayout","children","JSON","parse","localStorage","getItem","timersArray","setItem","stringify","initialState","reducer","state","filter","t","console","log","createStore","createMuiTheme","indigo","secondary","purple","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab63698c.chunk.js","sourcesContent":["export const ADD_TASK_TIMER = \"ADD_TASK_TIMER\";\nexport const DELETE_TASK_TIMER = \"DELETE_TASK_TIMER\";\nexport const SET_TIMERS = \"SET_TIMERS\";\nexport const PAUSE_TIMER = \"PAUSE_TIMER\";\nexport const RESUME_TIMER = \"RESUME_TIMER\";\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTimer } from \"../store/actions\";\nimport { Button, makeStyles, TextField } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\n\nconst genUID = () => Math.random().toString(36).substr(2, 9);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(3),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  textField: {\n    flexGrow: 2,\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction InputNewTask() {\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const keyDownHandler = (event) => {\n    if (event.key === \"Enter\") {\n      saveTimerHandler();\n    }\n  };\n\n  const saveTimerHandler = () => {\n    const taskTitle = title || `Task#[${moment().format(\"HH:mm:ss\")}]`;\n    setTitle(\"\");\n    return dispatch(addTimer(genUID(), taskTitle, Date.now()));\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        variant=\"outlined\"\n        className={classes.textField}\n        type=\"text\"\n        onChange={(e) => setTitle(e.target.value)}\n        value={title}\n        label=\"Task title\"\n        onKeyPress={keyDownHandler}\n      />\n      <Button onClick={saveTimerHandler} variant=\"contained\" color=\"primary\">\n        <AddIcon />\n      </Button>\n    </div>\n  );\n}\n\nexport default InputNewTask;\n","import {\n  ADD_TASK_TIMER,\n  DELETE_TASK_TIMER,\n  SET_TIMERS,\n  PAUSE_TIMER,\n  RESUME_TIMER,\n} from \"./actionTypes\";\n\nexport const addTimer = (id, title, startingTime) => {\n  return {\n    type: ADD_TASK_TIMER,\n    payload: {\n      id,\n      title,\n      startingTime,\n      pausingTime: 0,\n      isPaused: false,\n    },\n  };\n};\n\nexport const deleteTimer = (id) => {\n  return {\n    type: DELETE_TASK_TIMER,\n    payload: {\n      id,\n    },\n  };\n};\n\nexport const pauseTimer = (id, time) => {\n  return {\n    type: PAUSE_TIMER,\n    payload: {\n      id,\n      time,\n    },\n  };\n};\n\nexport const resumeTimer = (id, time) => {\n  return {\n    type: RESUME_TIMER,\n    payload: {\n      id,\n      time,\n    },\n  };\n};\n\nexport const setTimers = (timersArray) => {\n  return {\n    type: SET_TIMERS,\n    payload: {\n      timersArray,\n    },\n  };\n};\n","import moment from \"moment\";\n\nexport const msToTime = (ms) => {\n  let h = moment.duration(ms).hours();\n  let m = moment.duration(ms).minutes();\n  let s = moment.duration(ms).seconds();\n  h = h < 10 ? \"0\" + h : h;\n  m = m < 10 ? \"0\" + m : m;\n  s = s < 10 ? \"0\" + s : s;\n\n  return `${h}:${m}:${s}`;\n};\n","import { msToTime } from \"../utils/timeUtils\";\nimport { useEffect, useState } from \"react\";\n\nfunction TaskTimer(props) {\n  const [time, setTime] = useState(0);\n\n  const runTimer = () => {\n    setTime(Date.now() - props.startingTime);\n  };\n\n  useEffect(() => {\n    let timer;\n    if (!props.isPaused) {\n      timer = setInterval(() => runTimer(), 100);\n    } else {\n      clearInterval(timer);\n      setTime(props.pausingTime - props.startingTime);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [props.isPaused]);\n  return <span>{msToTime(time)}</span>;\n}\n\nexport default TaskTimer;\n","import { IconButton, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport TaskTimer from \"./TaskTimer\";\nimport { useDispatch } from \"react-redux\";\nimport { pauseTimer, resumeTimer } from \"../store/actions\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    transition: \".2s ease-in\",\n  },\n  paused: {\n    color: theme.palette.action.disabled,\n    backgroundColor: theme.palette.action.disabledBackground,\n    transition: \".2s ease-out\",\n  },\n}));\n\nfunction TaskItem(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onPauseHandler = () => {\n    if (props.isPaused) {\n      return dispatch(resumeTimer(props.timerId, Date.now()));\n    } else {\n      return dispatch(pauseTimer(props.timerId, Date.now()));\n    }\n  };\n\n  return (\n    <Paper className={clsx(classes.root, { [classes.paused]: props.isPaused })}>\n      {props.title}\n\n      <div>\n        <TaskTimer\n          startingTime={props.startingTime}\n          isPaused={props.isPaused}\n          pausingTime={props.pausingTime}\n        />\n        <IconButton onClick={() => onPauseHandler()}>\n          {props.isPaused ? (\n            <PlayIcon color=\"primary\" />\n          ) : (\n            <PauseIcon color=\"primary\" />\n          )}\n        </IconButton>\n        <IconButton onClick={props.onRemove}>\n          <CloseIcon color=\"error\" />\n        </IconButton>\n      </div>\n    </Paper>\n  );\n}\n\nexport default TaskItem;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteTimer } from \"../store/actions\";\nimport TaskItem from \"./TaskItem\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  text: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction TaskList() {\n  const timers = useSelector((store) => store.timers);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return timers.length ? (\n    <div className={classes.root}>\n      {timers.map((el) => (\n        <TaskItem\n          key={el.id}\n          onRemove={() => dispatch(deleteTimer(el.id))}\n          isPaused={el.isPaused}\n          startingTime={el.startingTime}\n          pausingTime={el.pausingTime}\n          timerId={el.id}\n          title={el.title}\n        />\n      ))}\n    </div>\n  ) : (\n    <Typography className={classes.text} variant=\"body1\" color=\"textSecondary\">\n      Add new task\n    </Typography>\n  );\n}\n\nexport default TaskList;\n","import { Paper, Typography, makeStyles } from \"@material-ui/core\";\nimport { indigo } from \"@material-ui/core/colors\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setTimers } from \"../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"560px\",\n    textAlign: \"center\",\n    margin: \"auto\",\n    marginTop: theme.spacing(2),\n  },\n  logo: {\n    color: theme.palette.primary.main,\n    fontWeight: \"bold\",\n  },\n}));\n\nfunction MainLayout({ children }) {\n  const timers = useSelector((store) => store.timers);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    const timers = JSON.parse(localStorage.getItem(\"timers\"));\n    if (timers && timers.length) {\n      dispatch(setTimers(timers));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"timers\", JSON.stringify(timers));\n  }, [timers]);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" className={classes.logo}>\n        Tasks Timer ⏱\n      </Typography>\n\n      <Paper>{children}</Paper>\n    </div>\n  );\n}\n\nexport default MainLayout;\n","import {\n  ADD_TASK_TIMER,\n  DELETE_TASK_TIMER,\n  PAUSE_TIMER,\n  RESUME_TIMER,\n  SET_TIMERS,\n} from \"./actionTypes\";\n\nconst initialState = {\n  timers: [],\n};\n\nfunction reducer(state = initialState, { payload, type }) {\n  switch (type) {\n    case ADD_TASK_TIMER:\n      return {\n        ...state,\n        timers: [payload, ...state.timers],\n      };\n    case DELETE_TASK_TIMER:\n      return {\n        ...state,\n        timers: state.timers.filter((t) => t.id !== payload.id),\n      };\n    case RESUME_TIMER:\n      console.log(state);\n      return {\n        ...state,\n        timers: state.timers.map((t) => {\n          if (t.id === payload.id) {\n            return {\n              ...t,\n              isPaused: false,\n              pausingTime: t.pausingTime,\n              startingTime: t.startingTime + (payload.time - t.pausingTime),\n            };\n          } else {\n            return t;\n          }\n        }),\n      };\n    case PAUSE_TIMER:\n      console.log(state);\n      return {\n        ...state,\n        timers: state.timers.map((t) => {\n          if (t.id === payload.id) {\n            return { ...t, isPaused: true, pausingTime: payload.time };\n          } else {\n            return t;\n          }\n        }),\n      };\n    case SET_TIMERS:\n      return {\n        ...state,\n        timers: payload.timersArray,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nexport default createStore(reducer);\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { indigo, purple } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: indigo[500],\n    },\n    secondary: {\n      main: purple[500],\n    },\n  },\n});\n\nexport default theme;\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { Provider } from \"react-redux\";\nimport InputNewTask from \"./components/InputNewTask\";\nimport TaskList from \"./components/TaskList\";\nimport MainLayout from \"./layouts/MainLayout\";\nimport store from \"./store\";\nimport theme from \"./theme\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <MainLayout>\n          <InputNewTask />\n          <TaskList />\n        </MainLayout>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"fontsource-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}