{"version":3,"sources":["store/timersReducer/actionTypes.js","store/settingsReducer/actionTypes.js","components/ToggleDarkModeButton/index.js","store/settingsReducer/actions.js","components/AppBar/AppBar.js","components/AppBar/index.js","components/TaskInput/TaskInput.js","components/TaskInput/index.js","store/timersReducer/actions.js","utils/timeUtils.js","components/TasksList/TaskTimer.js","components/TasksList/TaskItem.js","components/TasksList/TasksList.js","components/TasksList/index.js","pages/CurrentTasks.js","components/TasksList/DeletedTaskItem.js","components/TasksList/DeletedTasksList.js","pages/DeletedTasks.js","layouts/MainLayout.js","store/timersReducer/index.js","store/settingsReducer/index.js","store/index.js","theme.js","App.js","index.js"],"names":["ADD_TASK_TIMER","DELETE_TASK_TIMER","SET_TIMERS","SET_DELETED_TIMERS","PAUSE_TIMER","RESUME_TIMER","DESTROY_DELETED_TIMER","TOGGLE_DARK_MODE","SET_DARK_THEME","useStyles","makeStyles","theme","root","position","top","spacing","right","ToggleDarkModeButton","classes","dispatch","useDispatch","isDark","useSelector","store","settings","IconButton","className","onClick","type","htmlColor","AppBar","tabValue","tabChangeHandler","useTheme","style","backgroundColor","palette","background","paper","Toolbar","Typography","variant","margin","Tabs","value","onChange","indicatorColor","centered","Tab","label","padding","display","justifyContent","textField","flexGrow","marginRight","InputNewTask","TaskInput","useState","title","setTitle","saveTimerHandler","taskTitle","moment","format","id","startingTime","payload","pausingTime","isPaused","addTimer","Math","random","toString","substr","Date","now","Paper","TextField","e","target","onKeyPress","event","key","Button","color","msToTime","ms","h","floor","duration","asHours","m","minutes","s","seconds","TaskTimer","props","time","setTime","useEffect","timer","clearInterval","setInterval","marginTop","alignItems","transition","paused","action","disabled","grey","TaskItem","onPauseHandler","timerId","pauseTimer","clsx","onRemove","text","textAlign","TaskList","TasksList","timers","length","map","el","deletingTime","deleteTimer","CurrentTasksTimers","timersStore","paddingRight","disabledBackground","DeletedTaskItem","Card","CardContent","gutterBottom","humanize","onDestroy","DeletedTasksList","deletedTimers","DeletedTasks","TabPanel","children","index","other","hidden","Box","p","tabPanel","maxWidth","breakpoints","down","MainLayout","setTabValue","loadDataFromLocalStorage","JSON","parse","localStorage","getItem","timersArray","setTimers","setItem","stringify","newValue","CurrentTasks","initialState","timersReducer","state","dTimer","find","t","filter","console","log","dt","pallet","primary","secondary","settingsReducer","createStore","combineReducers","useAppTheme","createMuiTheme","main","indigo","purple","App","useLayoutEffect","setDarkTheme","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8f848e3.chunk.js","sourcesContent":["export const ADD_TASK_TIMER = \"ADD_TASK_TIMER\";\nexport const DELETE_TASK_TIMER = \"DELETE_TASK_TIMER\";\nexport const SET_TIMERS = \"SET_TIMERS\";\nexport const SET_DELETED_TIMERS = \"SET_DELETED_TIMERS\";\nexport const PAUSE_TIMER = \"PAUSE_TIMER\";\nexport const RESUME_TIMER = \"RESUME_TIMER\";\nexport const DESTROY_DELETED_TIMER = \"DESTROY_DELETED_TIMER\";\n","export const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\nexport const SET_DARK_THEME = \"SET_DARK_THEME\";\n","import { IconButton, makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Sun from \"@material-ui/icons/Brightness5\";\nimport Moon from \"@material-ui/icons/Brightness4\";\nimport { toggleDarkMode } from \"../../store/settingsReducer/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: theme.spacing(0.5),\n    right: theme.spacing(1),\n  },\n}));\n\nfunction ToggleDarkModeButton() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isDark = useSelector((store) => store.settings.isDark);\n  return (\n    <IconButton\n      className={classes.root}\n      onClick={() => dispatch(toggleDarkMode())}\n    >\n      {isDark ? <Sun /> : <Moon htmlColor=\"#fff\" />}\n    </IconButton>\n  );\n}\n\nexport default ToggleDarkModeButton;\n","import { SET_DARK_THEME, TOGGLE_DARK_MODE } from \"./actionTypes\";\n\nexport const toggleDarkMode = () => {\n  return {\n    type: TOGGLE_DARK_MODE,\n  };\n};\n\nexport const setDarkTheme = (isDark) => {\n  return {\n    type: SET_DARK_THEME,\n    payload: { isDark },\n  };\n};\n","import {\n  AppBar as AppBarMUI,\n  Toolbar,\n  Typography,\n  Tabs,\n  Tab,\n  useTheme,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport ToggleDarkModeButton from \"../ToggleDarkModeButton\";\n\nfunction AppBar({ tabValue, tabChangeHandler }) {\n  const isDark = useSelector(({ settings }) => settings.isDark);\n  const theme = useTheme();\n  return (\n    <AppBarMUI\n      position=\"sticky\"\n      style={{ backgroundColor: isDark && theme.palette.background.paper }}\n    >\n      <Toolbar>\n        <Typography variant=\"h5\" style={{ margin: \"auto\" }}>\n          Tasks Timer\n        </Typography>\n        <ToggleDarkModeButton />\n      </Toolbar>\n      <Tabs\n        value={tabValue}\n        onChange={tabChangeHandler}\n        indicatorColor=\"secondary\"\n        centered\n      >\n        <Tab label=\"Current\" />\n        <Tab label=\"Deleted\" />\n      </Tabs>\n    </AppBarMUI>\n  );\n}\n\nexport default AppBar;\n","import AppBar from \"./AppBar\";\nexport default AppBar;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTimer } from \"../../store/timersReducer/actions\";\nimport { Button, makeStyles, Paper, TextField } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\n\nconst genUID = () => Math.random().toString(36).substr(2, 9);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  textField: {\n    flexGrow: 2,\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction InputNewTask() {\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const keyDownHandler = (event) => {\n    if (event.key === \"Enter\") {\n      saveTimerHandler();\n    }\n  };\n\n  const saveTimerHandler = () => {\n    const taskTitle = title || `Task#[${moment().format(\"HH:mm:ss\")}]`;\n    setTitle(\"\");\n    return dispatch(addTimer(genUID(), taskTitle, Date.now()));\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TextField\n        variant=\"outlined\"\n        className={classes.textField}\n        type=\"text\"\n        onChange={(e) => setTitle(e.target.value)}\n        value={title}\n        label=\"Task title\"\n        onKeyPress={keyDownHandler}\n      />\n      <Button onClick={saveTimerHandler} variant=\"contained\" color=\"primary\">\n        <AddIcon />\n      </Button>\n    </Paper>\n  );\n}\n\nexport default InputNewTask;\n","import TaskInput from \"./TaskInput\";\nexport default TaskInput;\n","import {\n  ADD_TASK_TIMER,\n  DELETE_TASK_TIMER,\n  SET_TIMERS,\n  PAUSE_TIMER,\n  RESUME_TIMER,\n  SET_DELETED_TIMERS,\n  DESTROY_DELETED_TIMER,\n} from \"./actionTypes\";\n\nexport const addTimer = (id, title, startingTime) => {\n  return {\n    type: ADD_TASK_TIMER,\n    payload: {\n      id,\n      title,\n      startingTime,\n      pausingTime: 0,\n      isPaused: false,\n    },\n  };\n};\n\nexport const deleteTimer = (id, deletingTime = Date.now()) => {\n  return {\n    type: DELETE_TASK_TIMER,\n    payload: {\n      id,\n      deletingTime,\n    },\n  };\n};\n\nexport const pauseTimer = (id, time) => {\n  return {\n    type: PAUSE_TIMER,\n    payload: {\n      id,\n      time,\n    },\n  };\n};\n\nexport const resumeTimer = (id, time) => {\n  return {\n    type: RESUME_TIMER,\n    payload: {\n      id,\n      time,\n    },\n  };\n};\n\nexport const setTimers = (timersArray) => {\n  return {\n    type: SET_TIMERS,\n    payload: {\n      timersArray,\n    },\n  };\n};\n\nexport const setDeletedTimers = (timersArray) => {\n  return {\n    type: SET_DELETED_TIMERS,\n    payload: {\n      timersArray,\n    },\n  };\n};\n\nexport const destroyDeletedTimers = (id) => {\n  return {\n    type: DESTROY_DELETED_TIMER,\n    payload: {\n      id,\n    },\n  };\n};\n","import moment from \"moment\";\n\nexport const msToTime = (ms) => {\n  let h = Math.floor(moment.duration(ms).asHours());\n  let m = moment.duration(ms).minutes();\n  let s = moment.duration(ms).seconds();\n  h = h < 10 ? \"0\" + h : h;\n  m = m < 10 ? \"0\" + m : m;\n  s = s < 10 ? \"0\" + s : s;\n\n  return `${h}:${m}:${s}`;\n};\n","import { msToTime } from \"../../utils/timeUtils\";\nimport { useEffect, useState } from \"react\";\n\nfunction TaskTimer(props) {\n  const [time, setTime] = useState(0);\n\n  const runTimer = () => {\n    setTime(Date.now() - props.startingTime);\n  };\n\n  useEffect(() => {\n    let timer;\n    if (!props.isPaused) {\n      timer = setInterval(() => runTimer(), 100);\n    } else {\n      clearInterval(timer);\n      setTime(props.pausingTime - props.startingTime);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [props.isPaused]);\n  return <span>{msToTime(time)}</span>;\n}\n\nexport default TaskTimer;\n","import { IconButton, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport TaskTimer from \"./TaskTimer\";\nimport { useDispatch } from \"react-redux\";\nimport { pauseTimer, resumeTimer } from \"../../store/timersReducer/actions\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    transition: \".2s ease-in\",\n  },\n  paused: {\n    color: theme.palette.action.disabled,\n    backgroundColor: theme.palette.grey[100],\n    transition: \".2s ease-out\",\n  },\n}));\n\nfunction TaskItem(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onPauseHandler = () => {\n    if (props.isPaused) {\n      return dispatch(resumeTimer(props.timerId, Date.now()));\n    } else {\n      return dispatch(pauseTimer(props.timerId, Date.now()));\n    }\n  };\n\n  return (\n    <Paper className={clsx(classes.root, { [classes.paused]: props.isPaused })}>\n      <Typography variant=\"body1\">{props.title}</Typography>\n      <div>\n        <TaskTimer\n          startingTime={props.startingTime}\n          isPaused={props.isPaused}\n          pausingTime={props.pausingTime}\n        />\n        <IconButton onClick={() => onPauseHandler()}>\n          {props.isPaused ? (\n            <PlayIcon color=\"primary\" />\n          ) : (\n            <PauseIcon color=\"primary\" />\n          )}\n        </IconButton>\n        <IconButton onClick={props.onRemove}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      </div>\n    </Paper>\n  );\n}\n\nexport default TaskItem;\n","import { useDispatch } from \"react-redux\";\nimport { deleteTimer } from \"../../store/timersReducer/actions\";\nimport TaskItem from \"./TaskItem\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction TaskList(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return props.timers.length ? (\n    props.timers.map((el) => (\n      <TaskItem\n        key={el.id}\n        onRemove={() => dispatch(deleteTimer(el.id))}\n        isPaused={el.isPaused}\n        startingTime={el.startingTime}\n        pausingTime={el.pausingTime}\n        timerId={el.id}\n        title={el.title}\n      />\n    ))\n  ) : (\n    <Typography className={classes.text} variant=\"body1\" color=\"textSecondary\">\n      Add new task\n    </Typography>\n  );\n}\n\nexport default TaskList;\n","import TasksList from \"./TasksList\";\nexport default TasksList;\n","import { Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport TaskInput from \"../components/TaskInput\";\nimport TasksList from \"../components/TasksList\";\n\nfunction CurrentTasksTimers() {\n  const timers = useSelector((store) => store.timersStore.timers);\n\n  return (\n    <>\n      <TaskInput />\n      {timers.length ? (\n        <TasksList timers={timers} />\n      ) : (\n        <Typography\n          variant=\"body1\"\n          color=\"textSecondary\"\n          style={{ marginTop: \"3em\" }}\n        >\n          Add new task\n        </Typography>\n      )}\n    </>\n  );\n}\n\nexport default CurrentTasksTimers;\n","import { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    textAlign: \"left\",\n    transition: \".2s ease-in\",\n  },\n  paused: {\n    color: theme.palette.action.disabled,\n    backgroundColor: theme.palette.action.disabledBackground,\n    transition: \".2s ease-out\",\n  },\n}));\n\nfunction DeletedTaskItem(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={clsx(classes.root, { [classes.paused]: props.isPaused })}>\n      <CardContent>\n        <Typography color=\"textSecondary\" variant=\"body2\" gutterBottom>\n          {moment.duration(-(Date.now() - props.deletingTime)).humanize(true)}\n        </Typography>\n        <Typography variant=\"body1\">{props.title}</Typography>\n      </CardContent>\n\n      <div>\n        <IconButton onClick={props.onDestroy}>\n          <RemoveIcon color=\"error\" />\n        </IconButton>\n      </div>\n    </Card>\n  );\n}\n\nexport default DeletedTaskItem;\n","import { useDispatch } from \"react-redux\";\nimport { destroyDeletedTimers } from \"../../store/timersReducer/actions\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport DeletedTaskItem from \"./DeletedTaskItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction DeletedTasksList(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return props.deletedTimers.length ? (\n    props.deletedTimers.map((el) => (\n      <DeletedTaskItem\n        key={el.id}\n        onDestroy={() => dispatch(destroyDeletedTimers(el.id))}\n        startingTime={el.startingTime}\n        deletingTime={el.deletingTime}\n        timerId={el.id}\n        title={el.title}\n      />\n    ))\n  ) : (\n    <Typography className={classes.text} variant=\"body1\" color=\"textSecondary\">\n      Add new task\n    </Typography>\n  );\n}\n\nexport default DeletedTasksList;\n","import { Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport DeletedTasksList from \"../components/TasksList/DeletedTasksList\";\n\nfunction DeletedTasks() {\n  const deletedTimers = useSelector((store) => store.timersStore.deletedTimers);\n\n  return (\n    <>\n      {deletedTimers.length ? (\n        <DeletedTasksList deletedTimers={deletedTimers} />\n      ) : (\n        <Typography\n          variant=\"body1\"\n          color=\"textSecondary\"\n          style={{ marginTop: \"3em\" }}\n        >\n          Deleted tasks not exist\n        </Typography>\n      )}\n    </>\n  );\n}\n\nexport default DeletedTasks;\n","import { makeStyles, Box } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setDeletedTimers, setTimers } from \"../store/timersReducer/actions\";\nimport AppBar from \"../components/AppBar\";\nimport CurrentTasksTimers from \"../pages/CurrentTasks\";\nimport DeletedTasks from \"../pages/DeletedTasks\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div hidden={value !== index} {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  tabPanel: {\n    maxWidth: \"560px\",\n    textAlign: \"center\",\n    margin: \"auto\",\n    [theme.breakpoints.down(\"xs\")]: {},\n  },\n}));\n\nfunction MainLayout({ children }) {\n  const dispatch = useDispatch();\n  const timers = useSelector((store) => store.timersStore.timers);\n  const deletedTimers = useSelector((store) => store.timersStore.deletedTimers);\n  const classes = useStyles();\n  const [tabValue, setTabValue] = useState(0);\n\n  const tabChangeHandler = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const loadDataFromLocalStorage = () => {\n    const deletedTimers = JSON.parse(localStorage.getItem(\"deletedTimers\"));\n    const timers = JSON.parse(localStorage.getItem(\"timers\"));\n    if (deletedTimers && deletedTimers.length) {\n      dispatch(setDeletedTimers(deletedTimers));\n    }\n    if (timers && timers.length) {\n      dispatch(setTimers(timers));\n    }\n  };\n\n  useEffect(() => {\n    loadDataFromLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"timers\", JSON.stringify(timers));\n  }, [timers]);\n\n  useEffect(() => {\n    localStorage.setItem(\"deletedTimers\", JSON.stringify(deletedTimers));\n  }, [deletedTimers]);\n\n  return (\n    <>\n      <AppBar tabChangeHandler={tabChangeHandler} tabValue={tabValue} />\n      <div className={classes.tabPanel}>\n        <TabPanel value={tabValue} index={0}>\n          <CurrentTasksTimers />\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <DeletedTasks />\n        </TabPanel>\n      </div>\n    </>\n  );\n}\n\nexport default MainLayout;\n","import {\n  ADD_TASK_TIMER,\n  DELETE_TASK_TIMER,\n  DESTROY_DELETED_TIMER,\n  PAUSE_TIMER,\n  RESUME_TIMER,\n  SET_DELETED_TIMERS,\n  SET_TIMERS,\n} from \"./actionTypes\";\n\nconst initialState = {\n  timers: [],\n  deletedTimers: [],\n};\n\nfunction timersReducer(state = initialState, { payload, type }) {\n  switch (type) {\n    case ADD_TASK_TIMER:\n      return {\n        ...state,\n        timers: [payload, ...state.timers],\n      };\n    case DELETE_TASK_TIMER:\n      const dTimer = state.timers.find((t) => t.id === payload.id);\n      if (dTimer) {\n        return {\n          ...state,\n          timers: state.timers.filter((t) => t.id !== payload.id),\n          deletedTimers: [\n            { ...dTimer, deletingTime: payload.deletingTime },\n            ...state.deletedTimers,\n          ],\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case RESUME_TIMER:\n      console.log(state);\n      return {\n        ...state,\n        timers: state.timers.map((t) => {\n          if (t.id === payload.id) {\n            return {\n              ...t,\n              isPaused: false,\n              pausingTime: t.pausingTime,\n              startingTime: t.startingTime + (payload.time - t.pausingTime),\n            };\n          } else {\n            return t;\n          }\n        }),\n      };\n    case PAUSE_TIMER:\n      console.log(state);\n      return {\n        ...state,\n        timers: state.timers.map((t) => {\n          if (t.id === payload.id) {\n            return { ...t, isPaused: true, pausingTime: payload.time };\n          } else {\n            return t;\n          }\n        }),\n      };\n    case SET_TIMERS:\n      return {\n        ...state,\n        timers: payload.timersArray,\n      };\n    case SET_DELETED_TIMERS:\n      return {\n        ...state,\n        deletedTimers: payload.timersArray,\n      };\n    case DESTROY_DELETED_TIMER:\n      return {\n        ...state,\n        deletedTimers: state.deletedTimers.filter((dt) => dt.id !== payload.id),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default timersReducer;\n","import { SET_DARK_THEME, TOGGLE_DARK_MODE } from \"./actionTypes\";\n\nconst initialState = {\n  isDark: false,\n  pallet: {\n    primary: \"#3f51b5\",\n    secondary: \"#ab47bc\",\n  },\n};\n\nconst settingsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case TOGGLE_DARK_MODE:\n      return {\n        ...state,\n        isDark: !state.isDark,\n      };\n    case SET_DARK_THEME:\n      return {\n        ...state,\n        isDark: payload.isDark,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default settingsReducer;\n","import { createStore, combineReducers } from \"redux\";\nimport timersReducer from \"./timersReducer\";\nimport settingsReducer from \"./settingsReducer\";\n\nexport default createStore(\n  combineReducers({\n    timersStore: timersReducer,\n    settings: settingsReducer,\n  })\n);\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { indigo, purple, lightBlue } from \"@material-ui/core/colors\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport store from \"./store\";\nimport { toggleDarkMode } from \"./store/settingsReducer/actions\";\n\nexport function isDark() {}\n\nfunction useAppTheme(isDark) {\n  console.log(isDark);\n  if (typeof isDark === \"undefined\") {\n    isDark = localStorage.getItem(\"theme\") === \"dark\";\n  }\n  const theme = createMuiTheme({\n    palette: {\n      type: isDark ? \"dark\" : \"light\",\n      primary: {\n        main: isDark ? indigo[300] : indigo[500],\n      },\n      secondary: {\n        main: purple[200],\n      },\n    },\n  });\n\n  return theme;\n}\n\nexport default useAppTheme;\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { useEffect, useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport MainLayout from \"./layouts/MainLayout\";\nimport { setDarkTheme } from \"./store/settingsReducer/actions\";\nimport useAppTheme from \"./theme\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isDark = useSelector(({ settings }) => settings.isDark);\n\n  useLayoutEffect(() => {\n    const isDark = localStorage.getItem(\"theme\") === \"dark\";\n    dispatch(setDarkTheme(isDark));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", isDark ? \"dark\" : \"light\");\n  }, [isDark]);\n\n  return (\n    <ThemeProvider theme={useAppTheme(isDark)}>\n      <CssBaseline />\n      <MainLayout />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"fontsource-roboto\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}