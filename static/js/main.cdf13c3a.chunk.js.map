{"version":3,"sources":["store/actionTypes.js","components/AppBar/AppBar.js","components/AppBar/index.js","components/TaskInput/TaskInput.js","components/TaskInput/index.js","store/actions.js","utils/timeUtils.js","components/TasksList/TaskTimer.js","components/TasksList/TaskItem.js","components/TasksList/TasksList.js","components/TasksList/index.js","pages/CurrentTasks.js","components/TasksList/DeletedTaskItem.js","components/TasksList/DeletedTasksList.js","pages/DeletedTasks.js","layouts/MainLayout.js","store/reducer.js","store/index.js","theme.js","App.js","index.js"],"names":["ADD_TASK_TIMER","DELETE_TASK_TIMER","SET_TIMERS","SET_DELETED_TIMERS","PAUSE_TIMER","RESUME_TIMER","DESTROY_DELETED_TIMER","AppBar","tabValue","tabChangeHandler","position","color","Toolbar","Typography","variant","style","margin","Tabs","value","onChange","indicatorColor","centered","Tab","label","useStyles","makeStyles","theme","root","padding","spacing","display","justifyContent","textField","flexGrow","marginRight","InputNewTask","TaskInput","useState","title","setTitle","dispatch","useDispatch","classes","saveTimerHandler","taskTitle","moment","format","id","startingTime","type","payload","pausingTime","isPaused","addTimer","Math","random","toString","substr","Date","now","Paper","className","TextField","e","target","onKeyPress","event","key","Button","onClick","msToTime","ms","h","floor","duration","asHours","m","minutes","s","seconds","TaskTimer","props","time","setTime","useEffect","timer","clearInterval","setInterval","marginTop","alignItems","transition","paused","palette","action","disabled","backgroundColor","grey","TaskItem","onPauseHandler","timerId","pauseTimer","clsx","IconButton","onRemove","text","textAlign","TaskList","TasksList","timers","length","map","el","deletingTime","deleteTimer","CurrentTasksTimers","useSelector","store","paddingRight","disabledBackground","DeletedTaskItem","Card","CardContent","gutterBottom","humanize","onDestroy","DeletedTasksList","deletedTimers","DeletedTasks","TabPanel","children","index","other","hidden","Box","p","tabPanel","maxWidth","breakpoints","down","MainLayout","setTabValue","loadDataFromLocalStorage","JSON","parse","localStorage","getItem","timersArray","setTimers","setItem","stringify","newValue","CurrentTasks","initialState","reducer","state","dTimer","find","t","filter","console","log","dt","createStore","createMuiTheme","primary","main","indigo","secondary","purple","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdf13c3a.chunk.js","sourcesContent":["export const ADD_TASK_TIMER = \"ADD_TASK_TIMER\";\nexport const DELETE_TASK_TIMER = \"DELETE_TASK_TIMER\";\nexport const SET_TIMERS = \"SET_TIMERS\";\nexport const SET_DELETED_TIMERS = \"SET_DELETED_TIMERS\";\nexport const PAUSE_TIMER = \"PAUSE_TIMER\";\nexport const RESUME_TIMER = \"RESUME_TIMER\";\nexport const DESTROY_DELETED_TIMER = \"DESTROY_DELETED_TIMER\";\n","import {\n  AppBar as AppBarMUI,\n  Toolbar,\n  Typography,\n  Tabs,\n  Tab,\n} from \"@material-ui/core\";\n\nfunction AppBar({ tabValue, tabChangeHandler }) {\n  return (\n    <AppBarMUI position=\"sticky\" color=\"primary\">\n      <Toolbar>\n        <Typography variant=\"h5\" style={{ margin: \"auto\" }}>\n          Tasks Timer\n        </Typography>\n      </Toolbar>\n      <Tabs\n        value={tabValue}\n        onChange={tabChangeHandler}\n        indicatorColor=\"secondary\"\n        centered\n      >\n        <Tab label=\"Current\" />\n        <Tab label=\"Deleted\" />\n      </Tabs>\n    </AppBarMUI>\n  );\n}\n\nexport default AppBar;\n","import AppBar from \"./AppBar\";\nexport default AppBar;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTimer } from \"../../store/actions\";\nimport { Button, makeStyles, Paper, TextField } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\n\nconst genUID = () => Math.random().toString(36).substr(2, 9);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  textField: {\n    flexGrow: 2,\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction InputNewTask() {\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const keyDownHandler = (event) => {\n    if (event.key === \"Enter\") {\n      saveTimerHandler();\n    }\n  };\n\n  const saveTimerHandler = () => {\n    const taskTitle = title || `Task#[${moment().format(\"HH:mm:ss\")}]`;\n    setTitle(\"\");\n    return dispatch(addTimer(genUID(), taskTitle, Date.now()));\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TextField\n        variant=\"outlined\"\n        className={classes.textField}\n        type=\"text\"\n        onChange={(e) => setTitle(e.target.value)}\n        value={title}\n        label=\"Task title\"\n        onKeyPress={keyDownHandler}\n      />\n      <Button onClick={saveTimerHandler} variant=\"contained\" color=\"primary\">\n        <AddIcon />\n      </Button>\n    </Paper>\n  );\n}\n\nexport default InputNewTask;\n","import TaskInput from \"./TaskInput\";\nexport default TaskInput;\n","import {\n  ADD_TASK_TIMER,\n  DELETE_TASK_TIMER,\n  SET_TIMERS,\n  PAUSE_TIMER,\n  RESUME_TIMER,\n  SET_DELETED_TIMERS,\n  DESTROY_DELETED_TIMER,\n} from \"./actionTypes\";\n\nexport const addTimer = (id, title, startingTime) => {\n  return {\n    type: ADD_TASK_TIMER,\n    payload: {\n      id,\n      title,\n      startingTime,\n      pausingTime: 0,\n      isPaused: false,\n    },\n  };\n};\n\nexport const deleteTimer = (id, deletingTime = Date.now()) => {\n  return {\n    type: DELETE_TASK_TIMER,\n    payload: {\n      id,\n      deletingTime,\n    },\n  };\n};\n\nexport const pauseTimer = (id, time) => {\n  return {\n    type: PAUSE_TIMER,\n    payload: {\n      id,\n      time,\n    },\n  };\n};\n\nexport const resumeTimer = (id, time) => {\n  return {\n    type: RESUME_TIMER,\n    payload: {\n      id,\n      time,\n    },\n  };\n};\n\nexport const setTimers = (timersArray) => {\n  return {\n    type: SET_TIMERS,\n    payload: {\n      timersArray,\n    },\n  };\n};\n\nexport const setDeletedTimers = (timersArray) => {\n  return {\n    type: SET_DELETED_TIMERS,\n    payload: {\n      timersArray,\n    },\n  };\n};\n\nexport const destroyDeletedTimers = (id) => {\n  return {\n    type: DESTROY_DELETED_TIMER,\n    payload: {\n      id,\n    },\n  };\n};\n","import moment from \"moment\";\n\nexport const msToTime = (ms) => {\n  let h = Math.floor(moment.duration(ms).asHours());\n  let m = moment.duration(ms).minutes();\n  let s = moment.duration(ms).seconds();\n  h = h < 10 ? \"0\" + h : h;\n  m = m < 10 ? \"0\" + m : m;\n  s = s < 10 ? \"0\" + s : s;\n\n  return `${h}:${m}:${s}`;\n};\n","import { msToTime } from \"../../utils/timeUtils\";\nimport { useEffect, useState } from \"react\";\n\nfunction TaskTimer(props) {\n  const [time, setTime] = useState(0);\n\n  const runTimer = () => {\n    setTime(Date.now() - props.startingTime);\n  };\n\n  useEffect(() => {\n    let timer;\n    if (!props.isPaused) {\n      timer = setInterval(() => runTimer(), 100);\n    } else {\n      clearInterval(timer);\n      setTime(props.pausingTime - props.startingTime);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [props.isPaused]);\n  return <span>{msToTime(time)}</span>;\n}\n\nexport default TaskTimer;\n","import { IconButton, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport TaskTimer from \"./TaskTimer\";\nimport { useDispatch } from \"react-redux\";\nimport { pauseTimer, resumeTimer } from \"../../store/actions\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    transition: \".2s ease-in\",\n  },\n  paused: {\n    color: theme.palette.action.disabled,\n    backgroundColor: theme.palette.grey[100],\n    transition: \".2s ease-out\",\n  },\n}));\n\nfunction TaskItem(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onPauseHandler = () => {\n    if (props.isPaused) {\n      return dispatch(resumeTimer(props.timerId, Date.now()));\n    } else {\n      return dispatch(pauseTimer(props.timerId, Date.now()));\n    }\n  };\n\n  return (\n    <Paper className={clsx(classes.root, { [classes.paused]: props.isPaused })}>\n      <Typography variant=\"body1\">{props.title}</Typography>\n      <div>\n        <TaskTimer\n          startingTime={props.startingTime}\n          isPaused={props.isPaused}\n          pausingTime={props.pausingTime}\n        />\n        <IconButton onClick={() => onPauseHandler()}>\n          {props.isPaused ? (\n            <PlayIcon color=\"primary\" />\n          ) : (\n            <PauseIcon color=\"primary\" />\n          )}\n        </IconButton>\n        <IconButton onClick={props.onRemove}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      </div>\n    </Paper>\n  );\n}\n\nexport default TaskItem;\n","import { useDispatch } from \"react-redux\";\nimport { deleteTimer } from \"../../store/actions\";\nimport TaskItem from \"./TaskItem\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction TaskList(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return props.timers.length ? (\n    props.timers.map((el) => (\n      <TaskItem\n        key={el.id}\n        onRemove={() => dispatch(deleteTimer(el.id))}\n        isPaused={el.isPaused}\n        startingTime={el.startingTime}\n        pausingTime={el.pausingTime}\n        timerId={el.id}\n        title={el.title}\n      />\n    ))\n  ) : (\n    <Typography className={classes.text} variant=\"body1\" color=\"textSecondary\">\n      Add new task\n    </Typography>\n  );\n}\n\nexport default TaskList;\n","import TasksList from \"./TasksList\";\nexport default TasksList;\n","import { Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport TaskInput from \"../components/TaskInput\";\nimport TasksList from \"../components/TasksList\";\n\nfunction CurrentTasksTimers(props) {\n  const timers = useSelector((store) => store.timers);\n\n  return (\n    <>\n      <TaskInput />\n      {timers.length ? (\n        <TasksList timers={timers} />\n      ) : (\n        <Typography\n          variant=\"body1\"\n          color=\"textSecondary\"\n          style={{ marginTop: \"3em\" }}\n        >\n          Add new task\n        </Typography>\n      )}\n    </>\n  );\n}\n\nexport default CurrentTasksTimers;\n","import { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    textAlign: \"left\",\n    transition: \".2s ease-in\",\n  },\n  paused: {\n    color: theme.palette.action.disabled,\n    backgroundColor: theme.palette.action.disabledBackground,\n    transition: \".2s ease-out\",\n  },\n}));\n\nfunction DeletedTaskItem(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={clsx(classes.root, { [classes.paused]: props.isPaused })}>\n      <CardContent>\n        <Typography color=\"textSecondary\" variant=\"body2\" gutterBottom>\n          {moment.duration(-(Date.now() - props.deletingTime)).humanize(true)}\n        </Typography>\n        <Typography variant=\"body1\">{props.title}</Typography>\n      </CardContent>\n\n      <div>\n        <IconButton onClick={props.onDestroy}>\n          <RemoveIcon color=\"error\" />\n        </IconButton>\n      </div>\n    </Card>\n  );\n}\n\nexport default DeletedTaskItem;\n","import { useDispatch } from \"react-redux\";\nimport { destroyDeletedTimers } from \"../../store/actions\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport DeletedTaskItem from \"./DeletedTaskItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction DeletedTasksList(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return props.deletedTimers.length ? (\n    props.deletedTimers.map((el) => (\n      <DeletedTaskItem\n        key={el.id}\n        onDestroy={() => dispatch(destroyDeletedTimers(el.id))}\n        startingTime={el.startingTime}\n        deletingTime={el.deletingTime}\n        timerId={el.id}\n        title={el.title}\n      />\n    ))\n  ) : (\n    <Typography className={classes.text} variant=\"body1\" color=\"textSecondary\">\n      Add new task\n    </Typography>\n  );\n}\n\nexport default DeletedTasksList;\n","import { Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport DeletedTasksList from \"../components/TasksList/DeletedTasksList\";\n\nfunction DeletedTasks() {\n  const deletedTimers = useSelector((store) => store.deletedTimers);\n\n  return (\n    <>\n      {deletedTimers.length ? (\n        <DeletedTasksList deletedTimers={deletedTimers} />\n      ) : (\n        <Typography\n          variant=\"body1\"\n          color=\"textSecondary\"\n          style={{ marginTop: \"3em\" }}\n        >\n          Deleted tasks not exist\n        </Typography>\n      )}\n    </>\n  );\n}\n\nexport default DeletedTasks;\n","import { makeStyles, Box } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setDeletedTimers, setTimers } from \"../store/actions\";\nimport AppBar from \"../components/AppBar\";\nimport CurrentTasksTimers from \"../pages/CurrentTasks\";\nimport DeletedTasks from \"../pages/DeletedTasks\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div hidden={value !== index} {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  tabPanel: {\n    maxWidth: \"560px\",\n    textAlign: \"center\",\n    margin: \"auto\",\n    [theme.breakpoints.down(\"xs\")]: {},\n  },\n}));\n\nfunction MainLayout({ children }) {\n  const dispatch = useDispatch();\n  const timers = useSelector((store) => store.timers);\n  const deletedTimers = useSelector((store) => store.deletedTimers);\n  const classes = useStyles();\n  const [tabValue, setTabValue] = useState(0);\n\n  const tabChangeHandler = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const loadDataFromLocalStorage = () => {\n    const deletedTimers = JSON.parse(localStorage.getItem(\"deletedTimers\"));\n    const timers = JSON.parse(localStorage.getItem(\"timers\"));\n    if (deletedTimers && deletedTimers.length) {\n      dispatch(setDeletedTimers(deletedTimers));\n    }\n    if (timers && timers.length) {\n      dispatch(setTimers(timers));\n    }\n  };\n\n  useEffect(() => {\n    loadDataFromLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"timers\", JSON.stringify(timers));\n  }, [timers]);\n\n  useEffect(() => {\n    localStorage.setItem(\"deletedTimers\", JSON.stringify(deletedTimers));\n  }, [deletedTimers]);\n\n  return (\n    <>\n      <AppBar tabChangeHandler={tabChangeHandler} tabValue={tabValue} />\n      <div className={classes.tabPanel}>\n        <TabPanel value={tabValue} index={0}>\n          <CurrentTasksTimers />\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <DeletedTasks />\n        </TabPanel>\n      </div>\n    </>\n  );\n}\n\nexport default MainLayout;\n","import {\n  ADD_TASK_TIMER,\n  DELETE_TASK_TIMER,\n  DESTROY_DELETED_TIMER,\n  PAUSE_TIMER,\n  RESUME_TIMER,\n  SET_DELETED_TIMERS,\n  SET_TIMERS,\n} from \"./actionTypes\";\n\nconst initialState = {\n  timers: [],\n  deletedTimers: [],\n};\n\nfunction reducer(state = initialState, { payload, type }) {\n  switch (type) {\n    case ADD_TASK_TIMER:\n      return {\n        ...state,\n        timers: [payload, ...state.timers],\n      };\n    case DELETE_TASK_TIMER:\n      const dTimer = state.timers.find((t) => t.id === payload.id);\n      if (dTimer) {\n        return {\n          ...state,\n          timers: state.timers.filter((t) => t.id !== payload.id),\n          deletedTimers: [\n            { ...dTimer, deletingTime: payload.deletingTime },\n            ...state.deletedTimers,\n          ],\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case RESUME_TIMER:\n      console.log(state);\n      return {\n        ...state,\n        timers: state.timers.map((t) => {\n          if (t.id === payload.id) {\n            return {\n              ...t,\n              isPaused: false,\n              pausingTime: t.pausingTime,\n              startingTime: t.startingTime + (payload.time - t.pausingTime),\n            };\n          } else {\n            return t;\n          }\n        }),\n      };\n    case PAUSE_TIMER:\n      console.log(state);\n      return {\n        ...state,\n        timers: state.timers.map((t) => {\n          if (t.id === payload.id) {\n            return { ...t, isPaused: true, pausingTime: payload.time };\n          } else {\n            return t;\n          }\n        }),\n      };\n    case SET_TIMERS:\n      return {\n        ...state,\n        timers: payload.timersArray,\n      };\n    case SET_DELETED_TIMERS:\n      return {\n        ...state,\n        deletedTimers: payload.timersArray,\n      };\n    case DESTROY_DELETED_TIMER:\n      return {\n        ...state,\n        deletedTimers: state.deletedTimers.filter((dt) => dt.id !== payload.id),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nexport default createStore(reducer);\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { indigo, purple } from \"@material-ui/core/colors\";\n\nconst isDark = false;\nconst theme = createMuiTheme({\n  palette: {\n    type: isDark ? \"dark\" : \"light\",\n    primary: {\n      main: indigo[500],\n    },\n    secondary: {\n      main: purple[400],\n    },\n  },\n});\n\nexport default theme;\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { Provider } from \"react-redux\";\n\nimport MainLayout from \"./layouts/MainLayout\";\nimport store from \"./store\";\nimport theme from \"./theme\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <MainLayout />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"fontsource-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}